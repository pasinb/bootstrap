// child padding classes
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    @each $spacerNum, $spacerValue in $spacers {
      .cpl#{$infix}-#{$spacerNum} {
        > *:not(:first-child) {
          padding-left: $spacerValue;
        }
      }
      .cpt#{$infix}-#{$spacerNum} {
        > *:not(:first-child) {
          padding-top: $spacerValue;
        }
      }
      .cml#{$infix}-#{$spacerNum} {
        > *:not(:first-child) {
          margin-left: $spacerValue;
        }
      }
      .cmt#{$infix}-#{$spacerNum} {
        > *:not(:first-child) {
          margin-top: $spacerValue;
        }
      }
      .ccpl#{$infix}-#{$spacerNum} {
        > * {
          padding-left: $spacerValue;
        }
      }
      .ccpt#{$infix}-#{$spacerNum} {
        > * {
          padding-top: $spacerValue;
        }
      }
      .ccml#{$infix}-#{$spacerNum} {
        > * {
          margin-left: $spacerValue;
        }
      }
      .ccmt#{$infix}-#{$spacerNum} {
        > * {
          margin-top: $spacerValue;
        }
      }
    }
  }
}

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    // row spacers
    @each $spacerNum, $spacerValue in $spacers {
      .row.g#{$infix}-#{$spacerNum} {
        margin: -$spacerValue / 2;
        > [class*="col-"] {
          padding: $spacerValue / 2;
        }
      }
      .row.gx#{$infix}-#{$spacerNum} {
        margin-left: -$spacerValue / 2;
        margin-right: -$spacerValue / 2;
        > [class*="col-"] {
          padding-left: $spacerValue / 2;
          padding-right: $spacerValue / 2;
        }
      }
      .row.gy#{$infix}-#{$spacerNum} {
        margin-top: -$spacerValue / 2;
        margin-bottom: -$spacerValue / 2;
        > [class*="col-"] {
          padding-top: $spacerValue / 2;
          padding-bottom: $spacerValue / 2;
        }
      }
    }
  }
}

// border-radius
@for $i from 1 through 20 {
  .br-#{$i} {
    border-radius: #{$i}px !important;
  }
  .bw-#{$i} {
    border-width: #{$i}px !important;
  }
}

$lh-list: (
  "0-5": 0.5,
  "0-55": 0.55,
  "0-6": 0.6,
  "0-65": 0.65,
  "0-7": 0.7,
  "0-75": 0.75,
  "0-8": 0.8,
  "0-85": 0.85,
  "0-9": 0.9,
  "0-95": 0.95,
  "1": 1,
  "1-05": 1.05,
  "1-1": 1.1,
  "1-15": 1.15,
  "1-2": 1.2,
  "1-25": 1.25,
  "1-3": 1.3,
  "1-35": 1.35,
  "1-4": 1.4,
  "1-45": 1.45,
  "1-5": 1.5,
  "1-55": 1.55,
  "1-6": 1.6,
  "1-65": 1.65,
  "1-7": 1.7,
  "1-75": 1.75,
  "1-8": 1.8,
  "1-85": 1.85,
  "1-9": 1.9,
  "1-95": 1.95,
  "2": 2,
  "2-05": 2.05,
  "2-1": 2.1,
  "2-15": 2.15,
  "2-2": 2.2,
  "2-25": 2.25,
  "2-3": 2.3,
  "2-35": 2.35,
  "2-4": 2.4,
  "2-45": 2.45,
  "2-5": 2.5,
);

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    @each $text, $value in $lh-list {
      .lh#{$infix}-#{$text} {
        line-height: #{$value} !important;
      }
    }
  }
}

// font-size, height, width
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    @each $num, $value in $spacers {
      .f#{$infix}-#{$num} {
        font-size: #{$value} !important;
      }
      .ww#{$infix}-#{$num} {
        width: #{$value} !important;
      }
      .hh#{$infix}-#{$num} {
        height: #{$value} !important;
      }
      .maxw#{$infix}-#{$num} {
        max-width: #{$value} !important;
      }
      .maxh#{$infix}-#{$num} {
        max-height: #{$value} !important;
      }
      .minw#{$infix}-#{$num} {
        min-width: #{$value} !important;
      }
      .minh#{$infix}-#{$num} {
        min-height: #{$value} !important;
      }
      .gap#{$infix}-#{$num} {
        grid-gap: #{$value} !important;
      }
      .gap-x#{$infix}-#{$num} {
        column-gap: #{$value} !important;
      }
      .gap-y#{$infix}-#{$num} {
        row-gap: #{$value} !important;
      }
    }
  }
}

$percent-viewport-list: (
  "5": 5,
  "10": 10,
  "15": 15,
  "20": 20,
  "25": 25,
  "30": 30,
  "35": 35,
  "40": 40,
  "45": 45,
  "50": 50,
  "55": 55,
  "60": 60,
  "65": 65,
  "70": 70,
  "75": 75,
  "80": 80,
  "85": 85,
  "90": 90,
  "95": 95,
  "100": 100,
);

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    @each $text, $value in $percent-viewport-list {
      .w#{$infix}-#{$text}p {
        width: #{$value + "%"} !important;
      }
      .minw#{$infix}-#{$text}p {
        min-width: #{$value + "%"} !important;
      }
      .maxw#{$infix}-#{$text}p {
        max-width: #{$value + "%"} !important;
      }
      .w#{$infix}-#{$text}v {
        width: #{$value + "vw"} !important;
      }
      .minw#{$infix}-#{$text}v {
        min-width: #{$value + "vw"} !important;
      }
      .maxw#{$infix}-#{$text}v {
        max-width: #{$value + "vw"} !important;
      }
      .h#{$infix}-#{$text}p {
        height: #{$value + "%"} !important;
      }
      .minh#{$infix}-#{$text}p {
        min-height: #{$value + "%"} !important;
      }
      .maxh#{$infix}-#{$text}p {
        max-height: #{$value + "%"} !important;
      }
      .h#{$infix}-#{$text}v {
        height: #{$value + "vh"} !important;
      }
      .minh#{$infix}-#{$text}v {
        min-height: #{$value + "vh"} !important;
      }
      .maxh#{$infix}-#{$text}v {
        max-height: #{$value + "vh"} !important;
      }
    }
  }
}

//z-index
@for $i from 1 through 10 {
  .z-#{$i} {
    z-index: #{$i} !important;
  }
}

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @for $i from 1 through 10 {
      .col-start#{$infix}-#{$i} {
        grid-column-start: $i;
      }
      .col-end#{$infix}-#{$i} {
        grid-column-end: $i;
      }
      .col-span#{$infix}-#{$i} {
        grid-column: span $i / span $i;
      }
      .row-start#{$infix}-#{$i} {
        grid-row-start: $i;
      }
      .row-end#{$infix}-#{$i} {
        grid-row-end: $i;
      }
      .row-span#{$infix}-#{$i} {
        grid-row: span $i / span $i;
      }
      .grid-rows#{$infix}-#{$i} {
        grid-template-rows: repeat(#{$i}, minmax(0, 1fr));
      }
      .grid-cols#{$infix}-#{$i} {
        grid-template-columns: repeat(#{$i}, minmax(0, 1fr));
      }
      .grid-mrows#{$infix}-#{$i} {
        grid-template-rows: repeat(#{$i}, min-content);
      }
      .grid-mcols#{$infix}-#{$i} {
        grid-template-columns: repeat(#{$i}, min-content);
      }
      .grid-arows#{$infix}-#{$i} {
        grid-template-rows: repeat(#{$i}, auto);
      }
      .grid-acols#{$infix}-#{$i} {
        grid-template-columns: repeat(#{$i}, auto);
      }
    }
    .col-auto {
      grid-column: auto;
    }
    .col-start#{$infix}-auto {
      grid-column-start: auto;
    }
    .col-end#{$infix}-auto {
      grid-column-end: auto;
    }
    .row-auto {
      grid-row: auto;
    }
    .row-start#{$infix}-auto {
      grid-row-start: auto;
    }
    .row-end#{$infix}-auto {
      grid-row-end: auto;
    }
    .grid-flow#{$infix}-row {
      grid-auto-flow: row;
    }
    .grid-flow#{$infix}-col {
      grid-auto-flow: column;
    }
    .grid-flow#{$infix}-row-dense {
      grid-auto-flow: row dense;
    }
    .grid-flow#{$infix}-col-dense {
      grid-auto-flow: column dense;
    }
  }
}

.thin {
  font-weight: 100;
}

.extra-light {
  font-weight: 200;
}

.light {
  font-weight: 300;
}

.regular {
  font-weight: 400;
}

.medium {
  font-weight: 500;
}

.semi-bold {
  font-weight: 600;
}

.bold {
  font-weight: 700;
}

.extra-bold {
  font-weight: 800;
}

.black {
  font-weight: 900;
}

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    .thin#{$infix} {
      font-weight: 100;
    }

    .extra-light#{$infix} {
      font-weight: 200;
    }

    .light#{$infix} {
      font-weight: 300;
    }

    .regular#{$infix} {
      font-weight: 400;
    }

    .medium#{$infix} {
      font-weight: 500;
    }

    .semi-bold#{$infix} {
      font-weight: 600;
    }

    .bold#{$infix} {
      font-weight: 700;
    }

    .extra-bold#{$infix} {
      font-weight: 800;
    }

    .black#{$infix} {
      font-weight: 900;
    }
  }
}
